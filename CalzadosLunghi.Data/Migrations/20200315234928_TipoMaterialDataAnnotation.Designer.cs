// <auto-generated />
using System;
using CalzadosLunghi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalzadosLunghi.Data.Migrations
{
    [DbContext(typeof(CalzadosLunghiDbContext))]
    [Migration("20200315234928_TipoMaterialDataAnnotation")]
    partial class TipoMaterialDataAnnotation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalzadosLunghi.Business.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoMaterialID")
                        .HasColumnType("int");

                    b.Property<int>("UnidadDeMedida")
                        .HasColumnType("int");

                    b.Property<int?>("ZapatoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipoMaterialID");

                    b.HasIndex("ZapatoID");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.PrecioMaterial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MaterialID");

                    b.ToTable("PrecioMateriales");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.Temporada", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Temporadas");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.TipoMaterial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoMateriales");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.Zapato", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContraFuerteID")
                        .HasColumnType("int");

                    b.Property<int?>("ForroCapelladaID")
                        .HasColumnType("int");

                    b.Property<int?>("ForroPlantillaID")
                        .HasColumnType("int");

                    b.Property<int?>("PunteraID")
                        .HasColumnType("int");

                    b.Property<int?>("TemporadaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContraFuerteID");

                    b.HasIndex("ForroCapelladaID");

                    b.HasIndex("ForroPlantillaID");

                    b.HasIndex("PunteraID");

                    b.HasIndex("TemporadaID");

                    b.ToTable("Zapatos");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.Material", b =>
                {
                    b.HasOne("CalzadosLunghi.Business.TipoMaterial", "TipoMaterial")
                        .WithMany()
                        .HasForeignKey("TipoMaterialID");

                    b.HasOne("CalzadosLunghi.Business.Zapato", null)
                        .WithMany("Capellada")
                        .HasForeignKey("ZapatoID");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.PrecioMaterial", b =>
                {
                    b.HasOne("CalzadosLunghi.Business.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialID");
                });

            modelBuilder.Entity("CalzadosLunghi.Business.Zapato", b =>
                {
                    b.HasOne("CalzadosLunghi.Business.Material", "ContraFuerte")
                        .WithMany()
                        .HasForeignKey("ContraFuerteID");

                    b.HasOne("CalzadosLunghi.Business.Material", "ForroCapellada")
                        .WithMany()
                        .HasForeignKey("ForroCapelladaID");

                    b.HasOne("CalzadosLunghi.Business.Material", "ForroPlantilla")
                        .WithMany()
                        .HasForeignKey("ForroPlantillaID");

                    b.HasOne("CalzadosLunghi.Business.Material", "Puntera")
                        .WithMany()
                        .HasForeignKey("PunteraID");

                    b.HasOne("CalzadosLunghi.Business.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaID");
                });
#pragma warning restore 612, 618
        }
    }
}
